<?php $_options = Mage::helper('core')->decorateArray($this->getOptions()) ?>
<?php if (count($_options)):?>
    <script type="text/javascript">
    //<![CDATA[
    var optionFileUpload = {
        productForm : $('product_addtocart_form'),
        formAction : '',
        formElements : {},
        upload : function(element){
            this.formElements = this.productForm.select('input', 'select', 'textarea', 'button');
            this.removeRequire(element.readAttribute('id').sub('option_', ''));

            template = '<iframe id="upload_target" name="upload_target" style="width:0; height:0; border:0;"><\/iframe>';

            Element.insert($('option_'+element.readAttribute('id').sub('option_', '')+'_uploaded_file'), {after: template});

            this.formAction = this.productForm.action;

            var baseUrl = '<?php echo $this->getUrl('*/product/upload') ?>';
            var urlExt = 'option_id/'+element.readAttribute('id').sub('option_', '');

            this.productForm.action = parseSidUrl(baseUrl, urlExt);
            this.productForm.target = 'upload_target';
            this.productForm.submit();
            this.productForm.target = '';
            this.productForm.action = this.formAction;
        },
        removeRequire : function(skipElementId){
            for(var i=0; i<this.formElements.length; i++){
                if (this.formElements[i].readAttribute('id') != 'option_'+skipElementId+'_file' && this.formElements[i].type != 'button') {
                    this.formElements[i].disabled='disabled';
                }
            }
        },
        addRequire : function(skipElementId){
            for(var i=0; i<this.formElements.length; i++){
                if (this.formElements[i].readAttribute('name') != 'options_'+skipElementId+'_file' && this.formElements[i].type != 'button') {
                    this.formElements[i].disabled='';
                }
            }
        },
        uploadCallback : function(data){
            this.addRequire(data.optionId);
            $('upload_target').remove();

            if (data.error) {

            } else {
                $('option_'+data.optionId+'_uploaded_file').value = data.fileName;
                $('option_'+data.optionId+'_file').value = '';
                $('option_'+data.optionId+'_file').hide();
                $('option_'+data.optionId+'').hide();
                template = '<div id="option_'+data.optionId+'_file_box"><a href="#"><img src="var/options/'+data.fileName+'" alt=""><\/a><a href="#" onclick="optionFileUpload.removeFile('+data.optionId+')" title="Remove file" \/>Remove file<\/a>';

                Element.insert($('option_'+data.optionId+'_uploaded_file'), {after: template});
            }
        },
        removeFile : function(optionId)
        {
            $('option_'+optionId+'_uploaded_file').value= '';
            $('option_'+optionId+'_file').show();
            $('option_'+optionId+'').show();

            $('option_'+optionId+'_file_box').remove();
        }
    }
    var optionTextCounter = {
        count : function(field,cntfield,maxlimit){
            if (field.value.length > maxlimit){
                field.value = field.value.substring(0, maxlimit);
            } else {
                cntfield.innerHTML = maxlimit - field.value.length;
            }
        }
    }

    Product.Options = Class.create();
    Product.Options.prototype = {
        initialize : function(config){
            this.config = config;
            this.reloadPrice();
        },
        reloadPrice : function(){
            price = new Number();
            config = this.config;
            skipIds = [];
            $$('.product-custom-option').each(function(element){
                var optionId = 0;
                element.name.sub(/[0-9]+/, function(match){
                    optionId = match[0];
                });
                if (this.config[optionId]) {
                    if (element.type == 'checkbox' || element.type == 'radio') {
                        if (element.checked) {
                            if (config[optionId][element.getValue()]) {
                                price += parseFloat(config[optionId][element.getValue()]);
                            }
                        }
                    } else if(element.hasClassName('datetime-picker') && !skipIds.include(optionId)) {
                        dateSelected = true;
                        $$('.product-custom-option[id^="options_' + optionId + '"]').each(function(dt){
                            if (dt.getValue() == '') {
                                dateSelected = false;
                            }
                        });
                        if (dateSelected) {
                            price += parseFloat(this.config[optionId]);
                            skipIds[optionId] = optionId;
                        }
                    } else if(element.type == 'select-one' || element.type == 'select-multiple') {
                        if (element.options) {
                            $A(element.options).each(function(selectOption){
                                if (selectOption.selected) {
                                    if (this.config[optionId][selectOption.value]) {
                                        price += parseFloat(this.config[optionId][selectOption.value]);
                                    }
                                }
                            });
                        }
                    } else {
                        if (element.getValue().strip() != '') {
                            price += parseFloat(this.config[optionId]);
                        }
                    }
                }
            });
            try {
                optionsPrice.changePrice('options', price);
                optionsPrice.reload();
                this.updateImage();
            } catch (e) {

            }
        },
        updateImage : function(){//added by Minglong
        	var flag = false;
        	$$('.product-custom-option').each(function(element){
                var optionId = 0;
                element.name.sub(/[0-9]+/, function(match){
                    optionId = match[0];
                });
                if (this.config[optionId]) {
                    if(element.type == 'select-one') {
                        if (element.options) {
                            $A(element.options).each(function(selectOption){
                                if (selectOption.selected) {
                                    if (this.config[optionId][selectOption.value]) {
                                        if(opscene7Config[optionId]){
                                            if(!opscene7Config[optionId][selectOption.value]['scene7_code']){
                                            	alert("no scene7 code on the option"+ selectOption.value +"!");
                                            }else{
                                                flag = true;
                                            }
                                        }
                                        
                                    }
                                }
                            });
                        }
                    }
                }
            });

            if(flag){
                //var form = $('product_addtocart_form');
                var url = '<?php echo $this->getUrl('scene7/index/index');?>'; 
                //var myAjax = new Ajax.Request(url,{method:'post', parameters: Form.serialize(form),onComplete:updateImg});
                var $imageChangeAjax = $j.manageAjax.create('imageChange', {queue: true, cacheResponse: true, abortOld: true});
                $imageChangeAjax.add({type:'POST',url: url, dataType: 'json', data: $j("#product_addtocart_form").serialize(),
	                	beforeSend: function(data) {
	                    updateImageStart();
	                  },
                      success: function(data) {
			                    if(data.result == "ok"){
			                        $j('#image').attr('src',data.url).load(function(){
			                        	updateImageStop();
				                    });
			                    }else{
			                      alert(data.error); 
			                    }  
                     },
                     error: function(res, status, errorThrown) {
                         updateImageStop();
                     }
               });
            }
        }
    }
    function validateOptionsCallback(elmId, result){
        var container = $(elmId).up('ul.options-list');
        if (result == 'failed') {
            container.removeClassName('validation-passed');
            container.addClassName('validation-failed');
        } else {
            container.removeClassName('validation-failed');
            container.addClassName('validation-passed');
        }
    }
    
    var opConfig = new Product.Options(<?php echo $this->getJsonConfig() ?>);
    //added by Minglong
    var opscene7Config = <?php echo $this->getScene7AttributeJsonConfig();?>;
    var $image = $j('#image');
    function updateImageStart() {
         var loading = $image.next('span.image_loading');
         if (!loading.size()) {
           loading = $j('<span class="image_loading"></span>').insertAfter($image);
         }
         var cssleft = Math.floor(($image.width() - loading.width()) / 2);
         var csstop = Math.floor(((parseInt($image.height()) > 15 ? $image.height() : 400) - loading.height()) / 2);
         loading.css({'position':'absolute', 'left':cssleft, 'top':csstop}).show();
       }

    function updateImageStop() {
         var loading = $image.next('span.image_loading');
         if (loading.size()) {
           loading.hide();
         }
       }

    $j(document).ready(function(){
    	var opConfig2 = <?php echo $this->getJsonConfig() ?>;
        var opscene7Config = <?php echo $this->getScene7AttributeJsonConfig();?>;
    	
        $$('.product-custom-option').each(function(element){
            var optionId = 0;
            element.name.sub(/[0-9]+/, function(match){
                optionId = match[0];
            });
            if (opConfig2[optionId]) {
                if(element.type == 'select-one') {
                    if (element.options) {
                        $A(element.options).each(function(selectOption){
                                if (opConfig2[optionId][selectOption.value]) {
                                    if(opscene7Config[optionId]){
                                        if(opscene7Config[optionId][selectOption.value]['is_default']){
                                            if(opscene7Config[optionId][selectOption.value]['is_default'] == '1'){
                                                element.value = selectOption.value;
                                            }
                                        }

                                    }
                                    
                                }
                        });
                    }
                }
            }
            
        });
        opConfig.reloadPrice();
    });
    //ended by Minglong
    //]]>
    </script>
    <dl>
    <?php foreach($_options as $_option): ?>
        <?php echo $this->getOptionHtml($_option) ?>
    <?php endforeach; ?>
    </dl>
<?php endif; ?>
